assert get_address("Помещение нежилое площадью 428,2 кв.м., кад. №12:05:0302016:1309, расположенное по адресу: РМЭ, г. Йошкар-Ола, ул. Баумана, д.100, принадлежащее ООО ТД «Герметик». Помещение с бременем залога в пользу ПАО «Сбербанк» (остаток задолженности на 31.05.2022 г. составляет 1960126,83 руб.)") == "РМЭ, г. Йошкар-Ола, ул. Баумана, д.100"
assert get_address("Помещение") == ""
assert get_address("Продажа имущества, находящегося в собственности города Москвы, нежилое помещение по адресу: город Москва, Бережковская набережная, дом 14, подвал № 0, площадь 390,70 кв.м, кадастровый номер: 77:07:0007005:2127 посредством публичного предложения") == "город Москва, Бережковская набережная, дом 14"
assert get_address("Помещение нежилое площадью 260,8 кв.м., кад. № 12:05:0701006:6453, расположенное по адресу: РМЭ, г. Йошкар-Ола, бул. Ураева д.6/1, пом.3, принадлежащее ООО «Компания «Чукшинский карьер».") == "РМЭ, г. Йошкар-Ола, бул. Ураева д.6/1, пом.3"
assert get_address("Продажа нежилого помещения, находящегося в хозяйственном ведении Государственного унитарного предприятия города Москвы «Центр управления городским имуществом» (ГУП «ЦУГИ»), расположенного по адресу: г. Москва, Строгино, ул. Лыковская 2-я, вл. 23, корп. 1, пом. XIII (нежилое помещение общей площадью 17,8 кв. м), кадастровый номер 77:08:0013010:1203") == "г. Москва, Строгино, ул. Лыковская 2-я, вл. 23, корп. 1, пом. XIII"
assert get_address("Продажа имущества, находящегося в собственности города Москвы, нежилое помещение по адресу: г. Москва, ул. Никитская Б., д. 24/1, стр. 6 площадью 11,1 кв. м (Этаж № 1), кадастровый номер: 77:01:0001069:5226") == "г. Москва, ул. Никитская Б., д. 24/1, стр. 6"
assert get_address("Нежилое помещение (подвал) площадью 82,3 кв.м., по адресу: г.Нижний Новгород, Советский район, ул.Белинского, д.41, пом ПЗ.") == "г.Нижний Новгород, Советский район, ул.Белинского, д.41, пом ПЗ"
assert get_address("1 нежилое помещение, этаж 2, кадастровый номер: 26:16:040603:913, площадью 311,9 кв. метра, с адресом - Ставропольский край, город Невинномысск, улица Гагарина, 7Б, помещение 28-51;") == "Ставропольский край, город Невинномысск, улица Гагарина, 7Б, помещение 28-51"
assert get_address("Нежилое помещение, назначение: нежилое помещение, общая площадь 41,5 кв.м, этаж № 1, кадастровый номер 40:26:000142:439, адрес (местоположение): Калужская область, г. Калуга, ул. Зеленая, д. 52, кв. 1") == "Калужская область, г. Калуга, ул. Зеленая, д. 52, кв. 1"
assert get_address("Нежилое помещение (котельная), общей площадью 126,4 кв. м, адрес (местонахождения): Пензенская область, Городищенский район, с. Мордовский Ишим, ул. Школьная, д. 40а Кадастровый номер 58:07:0000000:543.Земельный участок, категория земель: земли населенных пунктов, общая площадь – 625 кв. м., адрес (местонахождение) объекта: Пензенская область, Городищенский район, с. Мордовский Ишим, ул. Школьная, д. 40а Кадастровый номер 58:07:0390201:374.") == "Пензенская область, Городищенский район, с. Мордовский Ишим, ул. Школьная, д. 40а"
assert get_address("Ннежилые помещения 1,2,3,4,5,6,7, Крыловский район, ст. Крыловская, ул. Орджоникидзе, д. 48") == "Крыловский район, ст. Крыловская, ул. Орджоникидзе, д. 48"
assert get_address("Нежилое помещение, расположенное по адресу: Санкт-Петербург, ул. Достоевского, д. 21, литера А, пом. 4-Н, площадь 23.8 кв.м, назначение: нежилое, этаж №1, кадастровый номер 78:31:0001692:2663") == "Санкт-Петербург, ул. Достоевского, д. 21, литера А, пом. 4-Н"
assert get_address("1 Нежилое помещение, назначение: нежилое помещение. Площадь 64,4 кв.м. Этаж 1. Адрес объекта: Кировская область, Шабалинский район, пгт Ленинское, ул. Фрунзе, д. 21В, пом. 104. Кадастровый номер: 43:37:310110:1491") == "Кировская область, Шабалинский район, пгт Ленинское, ул. Фрунзе, д. 21В, пом. 104"
assert get_address("Нежилое помещение, общей  площадью 26,3 кв.м., кадастровый номер 42:32:0103013:35469,  расположенное по адресу: Кемеровская область, город Прокопьевск, проспект Строителей, 7, помещение 3") == "Кемеровская область, город Прокопьевск, проспект Строителей, 7, помещение 3"
assert get_address("Муниципальное имущество в виде нежилого помещения (кадастровый номер 66:58:2101004:1409), общей площадью 17,3 кв.м., расположенное по адресу: Свердловская область, город Первоуральск, село Новоалексеевское, улица Буденного, дом 13") == "Свердловская область, город Первоуральск, село Новоалексеевское, улица Буденного, дом 13"
assert get_address("Нежилое помещение с кадастровым номером 43:14:020212:361 (реестровый номер федерального имущества П13440000743) общей площадью 14,3 кв.м, расположенное по адресу: Кировская область, Куменский район, пгт. Кумены, ул. Милицейская, д. 7, пом. 1001") == "Кировская область, Куменский район, пгт. Кумены, ул. Милицейская, д. 7, пом. 1001"
assert get_address("нежилое помещение, общей площадью 16,9 кв.м, расположенное по адресу: ул.Советская, д. 3, п. Затон, Соликамский район") == "ул.Советская, д. 3, п. Затон, Соликамский район"
assert get_address("15/10000 долей (16,4 кв.м) в праве собственности на здание главного корпуса гаража и административного здания с пристроями общей площадью 11307 кв.м по ул.Эмилии Алексеевой, 2/пр-кту Ленина, 199") == "по ул.Эмилии Алексеевой, 2/пр-кту Ленина, 199"
	"Нежилое помещение первого этажа пятиэтажного жилого здания, общей площадью 78,2 кв.м, расположенное по адресу: Республика Башкортостан, Белебеевский район, р.п. Приютово, ул. Магистральная, д.1 А, кадастровый номер 02:63:020403:772.":"респ Башкортостан, Белебеевский район, р.п. Приютово, ул. Магистральная, д.1 А"
 }

def test():
	count = 0
	for j in range(1, 52):
		with open(f"../cache/SUCCEED/result_{j}.json", encoding='utf8') as f:
			json_data = json.load(f)

			for i in json_data['content']:
				address = get_floor(i)
				if not address:
					# address = get_floor(i['lotName'])
					# if not address:
					print("1", i['lotDescription'])
					print("3", i['lotName'])
					for char in i['characteristics']:
						if char["name"] == "Расположение в пределах объекта недвижимости (этажа, части этажа, нескольких этажей)" and char.get("characteristicValue"):
							print(char.get("characteristicValue"))

					print("\r\n")
					count += 1


	for t, str in TEST.items():
		if get_address(t) != str:
			print(t)
			print(f"fail \"{str}\" != \"{get_address(t)}\"")

	print(count)


def test_get_info():
	count = 0
	for j in range(1, 52):
		with open(f"../cache/SUCCEED/result_{j}.json", encoding='utf8') as f:
			json_data = json.load(f)

			for i in json_data['content']:
				if get_type_object(i) == "Нежилое помещение":
					print("1", i['lotDescription'])
					print("2", i['lotName'])
					# for char in i['characteristics']:
					# 	if char[
					# 		"name"] == "Расположение в пределах объекта недвижимости (этажа, части этажа, нескольких этажей)" and char.get(
					# 			"characteristicValue"):
					# 		print(char.get("characteristicValue"))

					print("\r\n")

#def get_population_locality(address, ):

def test_get_population():
	count = 0
	df = pd.read_excel('../Population.xlsx', usecols=['region','municipality','settlement','type','population'])
	print(df)

	#return
	for j in range(1, 52):
		with open(f"../cache/SUCCEED/result_{j}.json", encoding='utf8') as f:
			json_data = json.load(f)


			for i in json_data['content']:
				#print(i["id"])
				#address = get_address(i)
				if os.path.exists(f'../cache/tmp_loc/{i["id"]}.json'):
						# info_object
					with open(f'../cache/tmp_loc/{i["id"]}.json', encoding='utf8') as f:
						info_object = json.load(f)

					if info_object:
						address = info_object[0]['value']
						lat = info_object[0]['data']['geo_lat']
						lon = info_object[0]['data']['geo_lon']
						settlement_type = info_object[0]['data'].get('city_type') or info_object[0]['data'].get('settlement_type')
						settlement = info_object[0]['data'].get('city') or info_object[0]['data'].get('settlement')
						area = info_object[0]['data'].get('area') if info_object[0]['data'].get('settlement') and info_object[0]['data'].get('area') else ""
						postal_distance = info_object[0]['data'].get('postal_distance')
						if settlement_type and settlement:
							settlement_population = df.loc[(df["settlement"] == settlement) & (df["type"] == settlement_type) & (df["municipality"].str.contains(area))]["population"].sum()
				#print(f"get info {i['id']}")
				#info_object = get_location(address, cadastral)
							print(settlement_type, settlement, address)
							#return
				#if get_type_object(i) == "Нежилое помещение":
				#print("1", i['lotDescription'])
				#print("2", i['lotName'])
					# for char in i['characteristics']:
					# 	if char[
					# 		"name"] == "Расположение в пределах объекта недвижимости (этажа, части этажа, нескольких этажей)" and char.get(
					# 			"characteristicValue"):
					# 		print(char.get("characteristicValue"))

					#print("\r\n")

if __name__ == "__main__":
    test_get_population()